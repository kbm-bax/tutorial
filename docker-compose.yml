services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9009:9000" # Map host port 9009 to container port 9000 (S3 API)
      - "9011:9001" # Map host port 9011 to container port 9001 (Web Console)
    volumes:
      - ./minio-data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  
  create-buckets:
    image: minio/mc
    container_name: create-buckets
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio password;
      /usr/bin/mc mb --ignore-existing myminio/datalakehouse;
      exit 0;
      "
  
  jupyter:
    build: .
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/data
    depends_on:
      - minio
      - create-buckets
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=password
      - MINIO_HOST=http://minio:9000 # This address remains the same because it refers to the internal Docker network
      - PYSPARK_SUBMIT_ARGS=--master local[*] --packages io.delta:delta-spark_2.12:3.2.0,org.apache.hadoop:hadoop-aws:3.3.4 pyspark-shell
    command: >
      /bin/bash -c "start-notebook.sh --ip=0.0.0.0 --NotebookApp.token='' --NotebookApp.password=''"
